services:
  app:
    build: ./backend
    container_name: db4
    volumes:
      - ./backend:/var/www/html:Z
      - /var/www/html/vendor
    ports:
      - "8000:8000"
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: db
      DB_USERNAME: user
      DB_PASSWORD: pass
      APP_URL: http://localhost:8000
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
      echo 'APP_NAME=Laravel' > .env &&
      echo 'APP_ENV=local' >> .env &&
      echo 'APP_DEBUG=true' >> .env &&
            echo 'APP_KEY=base64:temp' >> .env &&
      echo 'APP_URL=http://localhost:8000' >> .env &&
      echo 'LOG_CHANNEL=stack' >> .env &&
      echo 'DB_CONNECTION=pgsql' >> .env &&
      echo 'DB_HOST=postgres' >> .env &&
      echo 'DB_PORT=5432' >> .env &&
      echo 'DB_DATABASE=db' >> .env &&
      echo 'DB_USERNAME=user' >> .env &&
      echo 'DB_PASSWORD=pass' >> .env &&
      echo 'CACHE_DRIVER=file' >> .env &&
      echo 'SESSION_DRIVER=file' >> .env &&
      php artisan config:clear &&
      php artisan key:generate --force &&
      php artisan migrate:fresh --seed --force &&
      php artisan serve --host=0.0.0.0 --port=8000
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: db4front
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app:Z
      - /usr/src/app/node_modules
    environment:
    - CHOKIDAR_USEPOLLING=true
    - WATCHPACK_POLLING=true
    command: sh -c "bun install && bun run dev"
    stdin_open: true
    tty: true
  postgres:
    image: postgres:17
    container_name: db4db
    restart: unless-stopped
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - pg_data:/var/lib/postgresql/data:Z
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:
